{"pages":[{"title":"WCM 五專第五","text":"cmsimde 內容管理系統 倉儲: https://github.com/mdecycu/cmsimde_site 網站: https://mde.tw/cmsimde_site/ 簡報: https://mde.tw/cmsimde_site/reveal 網誌: https://mde.tw/cmsimde_site/blog","tags":"misc","url":"./pages/wcm-wu-zhuan-di-wu/"},{"title":"WCM w13 內容","text":"網際內容管理課程第十三週, 從單機猜數字遊戲與 AI 應用談起 先看看 Linux 在 Linux 設定全域 Proxy 伺服器的位置, 可以是 /etc/environment 檔案中的: http_proxy=\"http://your_proxy_server:port\" https_proxy=\"http://your_proxy_server:port\" 能不能讓每一位學員都擁有遠端登入 stud.cycu.org 這台主機的帳號? How? 擁有帳號, 然後呢? 猜猜看遊戲 guess_game.7z 是在 AI 輔助下, 將簡單的單人 Brython 線上猜數字遊戲 轉化為可以多人同場比賽猜數字的線上遊戲. http://229.cycu.org:88 由於使用 Flask, 直接啟動模式僅用於程式開發, 若要部署在 Windows 或 Linux 電腦上, 還需進行下列考量: 有沒有比較好的啟動模式? 要如何使用 https? 有沒有必要? 能不能透過電腦的服務執行猜數字遊戲? 也就是隨著電腦開機後能直接自動執行? 假如要配置使用者註冊制或儲存比賽資料, 該使用哪一種資料庫? SQLite 就可以, 還是需要使用 PostgreSQL? 一但部署成功, 該如何設置網站的符號名稱? 最後, 延伸以上的多人網際程式架構, 是不是就可以開發一個網際協同產品開發網站? 在現今 AI 系統的輔助下, 上列程式開發有沒有變得比較簡單? 後續猜數字遊戲的開發倉儲: https://github.com/mdecycu/guess_game 值得加入的功能: 具有管理者模式, 可以重新啟動伺服器. 可讓參賽者經由 Github、Gmail 或其他支援 Oauth2 登入協定的帳號登入. 加入資料庫, 儲存參賽者的得分資料、歷史紀錄並提供排行榜等功能. 加入其他可多人線上參與競技或進行同步對話功能, 或納入其他專業相關的協同設計功能. w14 各組啟動並執行網際猜數字遊戲 說明影片: w14 有關可攜程式系統的批次檔案說明 以下影片說明如何針對不同的 Python 版本修改啟動批次檔案, 並利用 AI 取得各指令的詳細說明: 以下影片說明如何在近端電腦執行猜數字遊戲伺服器程式: 以下影片說明如何配置一個 Flask + Socketio 建立一個非同步的網際內容管理程式: 以下為 Python 參考程式: 將原先沒有 tab 符號介入兩行資料的原始檔案, 利用 Python 轉為 csv 檔案格式: 處理方式: 逐列透過空白分割, 若隨後沒有資料加入 tab 符號, 若有資料則將空白換為 tab 符號, 然後列印出 (也可以直接存檔) import io def process_file(file_path): \"\"\" 讀取檔案，處理後回傳處理後的文字。 Args: file_path: 檔案路徑。 Returns: 處理後的文字。 \"\"\" with open(file_path, 'r', encoding='utf-8') as f: lines = f.readlines() processed_lines = [lines[0].strip()] # 保留第一行標題 for line in lines[1:]: parts = line.strip().split(\" \", 1) # 只分割一次，以保留後面的空白和中文字 if len(parts) == 1: processed_lines.append(parts[0] + \"\\t\") # 若沒有後續資料，加tab else: processed_lines.append(parts[0] + \"\\t\" + parts[1]) # 將空白換成tab return \"\\n\".join(processed_lines) # 測試 file_path = '1a_w14.txt' # 檔案路徑 processed_text = process_file(file_path) print(processed_text) 以下程式則可讀取 w14 點名 csv 檔案, 並從期中自評表 csv 檔案中剃除已經退選者的資料: 處理方式: 利用 csv 模組讀取各列資料, 以 w14 留下的學員學號為基準, 接著讀取期中期望資料時, 只能下仍在 w14 名單中的學員資料 import csv # 導入 csv 模組，用於處理 csv 檔案 def filter_and_save_csv(rollcall_file, midterm_file, output_file): \"\"\" 讀取兩個 csv 檔案，篩選學號後儲存。 Args: rollcall_file: 點名 csv 檔案路徑。 midterm_file: 期中成績 csv 檔案路徑。 output_file: 輸出 csv 檔案路徑。 \"\"\" # 讀取點名檔案中的學號 valid_student_ids = set() # 建立一個空的集合，用於儲存有效的學號 with open(rollcall_file, 'r', encoding='utf-8') as f: # 開啟點名 csv 檔案，使用 utf-8 編碼讀取 reader = csv.reader(f) # 建立 csv 讀取器 next(reader) # 跳過標題列 for row in reader: # 逐行讀取點名檔案 student_id = row[0].strip() # 取得學號，並去除前後空白 valid_student_ids.add(student_id) # 將學號加入到有效的學號集合中 # 讀取期中成績檔案，篩選學號並儲存 with open(midterm_file, 'r', encoding='utf-8') as f_in, open(output_file, 'w', encoding='utf-8', newline='') as f_out: # 同時開啟期中成績 csv 檔案（讀取模式）和輸出 csv 檔案（寫入模式），使用 utf-8 編碼，並設定 newline='' 以避免空行 reader = csv.reader(f_in) # 建立 csv 讀取器 writer = csv.writer(f_out) # 建立 csv 寫入器 writer.writerow(next(reader)) # 將期中成績 csv 檔案的第一行（標題列）寫入輸出檔案 for row in reader: # 逐行讀取期中成績檔案 student_id = row[0].strip() # 取得學號，並去除前後空白 if student_id in valid_student_ids: # 檢查學號是否存在於有效的學號集合中 writer.writerow(row) # 若存在，則將該學生的完整資料寫入輸出檔案 # 設定檔案路徑 rollcall_file = '1a_w14_rollcall.csv' # 點名 csv 檔案路徑 midterm_file = '1a wcm2024 midterm - Sheet1.csv' # 期中成績 csv 檔案路徑 output_file = '1a_wcm2024_midterm_wishful.csv' # 輸出 csv 檔案路徑 # 執行篩選和儲存 filter_and_save_csv(rollcall_file, midterm_file, output_file) # 呼叫函式，執行篩選和儲存操作","tags":"wcm","url":"./wcm-w13-ai-and-guessing-game.html"},{"title":"WCM 分組專案","text":"五專網際內容管理課程第十二週專案","tags":"Project","url":"./wcm-w12-project.html"},{"title":"WCM 第 11 週課程內容","text":"網際內容管理第 11 週課程, 說明如何在網頁中加入 Brython 程式應用 1a 評分倉儲 倉儲: https://github.com/mdewcm2024/1astud-site 網站: https://mdewcm2024.github.io/1astud-site 有關 git pull 評分倉儲之後的處理要點: 各組員或各組先將改版資料推向個人或分組的倉儲分支後, 再與主分支的版本內容合併: 5j 評分倉儲 倉儲: https://github.com/mdewcm2024/5jstud-5jsite 網站: https://mdewcm2024.github.io/5jstud-5jsite/ 從教務主機直接擷取資料 利用 wsgi_v1.py 可以取得結果: wsgi_v1_output.txt 表示可以利用 Flask 建置網站程式取下教務主機中的相關資料. 以下影片說明如何利用 wsgi_v2.py 擷取各學期班級課表: 說明如何將 Python 程式配置為 Windows 操作系統中的服務: 經由上述影片將程式配置在伺服器後, 可以從 229 主機取下設一甲 90 學年度第一學期的課表 利用 wsgi_v2.py 可以取得以下結果: Brython 程式環境 將 brython_w_editor_html.txt 超文件內容放入網誌中, 即可得到下列內容. 若要放入動態網站, 則必須注意各引用頁面是由 cmsimde 目錄中啟動, 必須使用 brython_on_editor.txt 超文件格式. 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt 動態頁面超文件). practice_html.txt 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 class 後, 在範例導入時透過 instance 引用. <!-- 啟動 Brython --> <script> window.onload=function(){ brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']}); } </script> 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"WCM","url":"./wcm-w11-Brython.html"},{"title":"WCM 分組專案","text":"網際內容管理課程分組專案 - 網頁與 Brython 程式應用 分組專案 51233101: 倉儲 | 網站 51233102: 倉儲 | 網站 51233103: 倉儲 | 網站 51233104: 倉儲 | 網站 51233105: 倉儲 | 網站 51233106: 倉儲 | 網站 51233107: 倉儲 | 網站 51233108: 倉儲 | 網站 51233109: 倉儲 | 網站 51233110: 倉儲 | 網站 51233111: 倉儲 | 網站 51233112: 倉儲 | 網站 51233113: 倉儲 | 網站 51233114: 倉儲 | 網站 51233115: 倉儲 | 網站 51233116: 倉儲 | 網站 51233117: 倉儲 | 網站 51233118: 倉儲 | 網站 51233119: 倉儲 | 網站 51233120: 倉儲 | 網站 51233121: 倉儲 | 網站 51233122: 倉儲 | 網站 51233123: 倉儲 | 網站 51233124: 倉儲 | 網站 51233125: 倉儲 | 網站 51233126: 倉儲 | 網站</a 51233127: 倉儲 | 網站 51233128: 倉儲 | 網站 51233129: 倉儲 | 網站 51233130: 倉儲 | 網站 51233131: 倉儲 | 網站 51233132: 倉儲 | 網站 51233133: 倉儲 | 網站 51233134: 倉儲 | 網站 51233135: 倉儲 | 網站 51233136: 倉儲 | 網站 51233137: 倉儲 | 網站 51233138: 倉儲 | 網站 51233139: 倉儲 | 網站 51233140: 倉儲 | 網站 51233141: 倉儲 | 網站 51233142: 倉儲 | 網站 51233143: 倉儲 | 網站 51233144: 倉儲 | 網站","tags":"Project","url":"./wcm-w10-project.html"},{"title":"WCM 課程期中整理","text":"網際內容管理課程的英文名稱為 Web-based Content Management, 課程目標是讓學員得以運用網頁來管理與個人或專業領域應用相關的內容. 當然, 我們還想啟發學員對於網頁與內容管理發展趨勢的思考, 並且針對學員選課, 評定出一個合理的修課成績! 網頁式內容管理 目前無論是 Github 的 Codespaces, Gitpod 或 Replit 都讓使用者可以直接在網頁瀏覽器中維護網站內容. 其中 Replit 還提供手機 App 讓使用者透過手機或平板管理網頁內容. 網際內容管理課程將網頁內容管理系統與網頁資料放在同一個倉儲中, 且讓使用者寄存在 Github 中, 只要能夠執行 Python 的雲端或近端環境都能開啟網頁編輯程式進行改版, 而編輯完成的網頁資料則可在 Github 倉儲中透過 Pages 的全球資訊網伺服器功能呈現網站內容. 網際內容管理課程所採用的管理系統採用 Python Flask 編寫, 其中除了章節式的網頁內容採超文件的 H 標註進行分頁外, 還導入 Pelican 與 Reveal.js 等兩個延伸套件, 其中 Pelican 可用來建立網誌, 而 Reveal.js 則可用來建立網頁上的簡報資料. 學習議題: 如何建立 Github 上的網站? 如何管理內容? 如何建立章節式網站? 能放入甚麼多媒體內容? 靜態圖文? 動態圖文? 線上遊戲? 3D 零組件展示? 如何建立網頁系統中的網誌? 如何建立網頁系統中的簡報? Python 程式系統 上課用的電腦中配置了一套舊版的可攜式 Python 程式系統, 可讓使用者建立新版的可攜式 Python 程式系統, 放入 USB 隨身碟後, 可以在任何一台 64 位元的 Winodws 操作系統中使用, 主要目的除了可用來維護位於 Github 的網頁內容之外, 也可用來開發各種 Python 程式, 或與其他 Windows 應用套件結合使用, 例如: 與 CoppeliaSim 機器人模擬場景結合, 建立機電控制系統, 或與 Siemens NX 的 API 延伸程式結合應用. 學習議題: 如何利用電腦輔助設計室的舊 Python 建立新的可攜環境? 在網頁中置入 Python 語法的程式加上對 Javascript 與超文件語法的了解後, 能夠應用在那些領域? (精密)機械設計流程? 設計運算? 特定系統模擬? 網頁上的 IDE IDE 是甚麼? 可以將 Replit、Codespaces 與 Gitpod 當成 IDE 用來開發各種程式嗎? 與近端操作系統上的開發有何不同? 多人協同? 這樣安全嗎? 學習議題: 學會使用網頁上的各種 IDE 之後, 有沒有甚麼感想或心得? AI 工具 ChatGPT 與 Gemini Pro 都可以直接利用 Gmail 帳號登入, 初級應用目前都可免費使用, 這兩個 AI 工具可以協助我們解決甚麼問題? 為什麼有人驚這些工具為天人? 有人卻覺得還好而已, 並無法從中挖出甚麼資料? 學習議題: AI 工具曾經協助我們解決甚麼問題? 實作練習問題 一份採 UTF-8 中文編碼的 .csv (例如: 5j_wcm2024_midterm.csv )在 Windows Excel 2016 開啟之後呈現亂碼, 該如何設定改為用 UTF-8 編碼? 請根據上一個 .csv (csv 是甚麼格式的資料?) 檔案內容, 在個人的網頁與網誌中列出每一位學員的 github wcm2024 倉儲與網頁連結. (第一次請直接用手動輸入的方式建立 html 檔案內容, 之後再思考如何讀取此一檔案後, 能直接將所需要的倉儲與網頁連結呈現在個人網站或網誌的特定位置) 這一本書 的第一章在講甚麼?能不能將其中練習編寫的內容, 放入個人的網頁與網誌? 為什麼 wcm2024 倉儲中的 cms.bat 在 Windows 啟動之後, 若同時多人連線, 系統會無法負荷, 同一台電腦硬體有沒有可能採其他方法啟動, 可以同時讓多人連線且不會產生延遲或停頓的問題? 例如採 wsgi 方式啟動, 這該如何進行? 當設定好讓 Flask 編寫的網際內容管理系統透過效率較高的 wsgi 模式執行後, 如何讓執行程式與電腦開機同步執行? 直接執行套件與透過 Windows services 執行有何不同? NSSM 是什麼工具? 如何在一台 Windows (Ubuntu) 電腦快速建立多人帳號? 建立多人帳號之後, 如何透過程式將帳號密碼寄給使用者? 承接上一題: 一個採用 Flask 編寫的伺服器系統, 該如何在 Windows 環境中以 wsgi 方式啟動? wcm2024 課程中曾經提到可以利用舊的可攜 Python 程式環境建立新的 Python 可攜程式環境, 但該如何進行? 假如希望直接在網頁中利用 Brython 建立一個掃地機器人的工作模擬系統, 該如何進行? wcm2024 課程除了可以使用 ChatGPT 外, 還能夠使用 Google Gemini Pro , 請試著在解決上列問題時, 善用這兩個系統, 並將使用過程與心得整理在個人的課程網頁與網誌中. from browser import document, window, html, load # 动态加载 Matter.js 库 (假设使用 CDN) load(\"https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.19.0/matter.min.js\") #print(dir(window.Matter.Bodies.rectangle())) # 创建 canvas 元素 canvas = html.CANVAS(width=800, height=800) canvas.id = \"canvas\" canvas.style = {\"border\": \"1px solid red\"} # 添加边框样式 brython_div = document[\"brython_div1\"] brython_div <= canvas # 获取 Matter.js 模块别名 matter = window.Matter Engine = matter.Engine Render = matter.Render Runner = matter.Runner Bodies = matter.Bodies Composite = matter.Composite # 创建引擎 engine = Engine.create() print(dir(engine)) # 创建渲染器，使用 canvas 元素的 ID render = Render.create({ 'element': document['canvas'], 'engine': engine }) # 创建红色矩形 rectangle = Bodies.rectangle(200, 200, 80, 80, { 'render': { 'fillStyle': 'red' } }) print(rectangle) # 将矩形添加到世界 Composite.add(engine.world, [rectangle]) # 创建运行器 runner = Runner.create() # 运行引擎 Runner.run(runner, engine) # 运行渲染器 Render.run(render) 針對以上課程內容, 請利用以下留言系統進行討論: Please enable JavaScript to view the comments powered by Disqus.","tags":"WCM","url":"./wcm-midterm.html"},{"title":"WCM 五專第八週課程內容","text":"五專 WCM 第八週課程, 建議學員長期維護個人的履歷網站, 並註冊領英帳號. 領英 有關 領英 註冊領英帳號 - 請直接以 Gmail 登入, 並設定身分為學生. Do you actually need a website? 人格特質的飬成？ Pull Requests 以 https://github.com/51233138/wcm2024 為例, scrum-1 登入 Github 後, fork 51233138 帳號下的 wcm2024 倉儲後, 設法改版後, 利用 Pull Requests 的流程要求 51233138 將改版資料 拉回合併 . 網際內容管理課程回顧 學員簡報與自評 - 請製作一個帶有說明字幕的期中報告影片, 放入個人的 wcm2024 影片, 以便在 w9 期中考週進行簡報與自評． 申請 Github 帳號: 目的是希望針對網站內容改版的每一個版本都能有效取得 申請 Replit 帳號: 可以在網頁瀏覽器或手機 App 修改網站內容 學習 Brython 程式: 可以直接在網頁上執行與產品設計有關的數值運算 Angry Bird 第十週開始是否可以將下列程式改採 Brython 編寫? any-bird-python Angry Birds ab , 執行 ab 參考: https://github.com/mdecycu/webgame 針對以上課程內容, 請利用以下留言系統進行討論: Please enable JavaScript to view the comments powered by Disqus.","tags":"五專","url":"./wcm-5j-w8.html"},{"title":"WCM 五專第七週課程內容","text":"五專 WCM 第七週課程, 開始說明如何在頁面配置 Brython 環境, 並將 Brython 程式配置在個人 Github 帳號下的 Gist. 練習利用程式建立單字查詢網頁 wcm2024 5j w7 利用 Python 建立 Javascript 電子書的單字查詢超文件 利用 2.txt 與 1.txt Python 程式, 從下列電子書建立英文單字查詢網頁: 2023 Programming for Absolute Beginners - Using the JavaScript Programming Language 單字查詢網頁 Brython 程式 首先, 對 ChatGPT 提問: Brython 是甚麼程式語言? 該如何使用? 回答: Brython 是一種在瀏覽器中運行的 Python 解譯器。它允許您在網頁上使用 Python 來編寫 Web-based 前端程式，而無需安裝任何套件或外部解譯器。 要使用 Brython，您可以按照以下步驟進行： 在您的網頁中引入 Brython 的 JavaScript 程式。就可以透過 CDN 或將文件下載到網頁中。 在 HTML 文件中，使用 <script type=\"text/python\"> 標籤來編寫 Python 程式碼。 當網頁加載時，Brython 會自動解譯並執行這些 Python 程式碼，並將結果呈現在網頁上。 如此就可以在瀏覽器中使用 Python 編寫動態網頁，而無需使用 JavaScript。這對於喜歡 Python 語法的開發者來說是一個很好的選擇。 再問: 可以舉一個簡單 Brython 程式範例, 從 1 累加到 10, 然後在網頁中以 html 列出運算結果 回答: 累加結果： 累加結果： 請根據上面的 Brython 範例, 寫出能夠從 https://mde.tw/cd2024/content/About.html 取出 anchor 字串為 \"2021_odoo_reading.html\" 的 href 資料 網頁中特定 anchor 的 href 資料： 以下為 Brython 由電腦執行猜數字遊戲: wcm2024 5j w7 intro brython number guessing 自動猜數字遊戲 Brython 程式碼: # 程式自動猜數字遊戲 # 從 browser 導入 document, html 與 alert 模組 from browser import document, html, alert # 導入 random 模組 import random # 宣告一個變數, 名稱為 \"id4\", 與超文件中 id 為 \"brython_div1\" 的物件進行對應 id4 = document[\"brython_div1\"] # 宣告一個變數, 名稱為 \"執行次數\", 起始對應為 100 執行次數 = 100 # 宣告 \"總猜測次數\" 變數, 起始對應為 0 總猜測次數 = 0 # range() 是一個能夠建立一系列數字的函式 for i in range(執行次數): # \"<=\" 是 Brython 特有符號, 用來將超文字指向左邊對應的變數在網頁超文件標註中的位置 id4 <= \"第\" + str(i+1) + \"次玩:\" + html.BR() 下限 = 1 上限 = 100 # 利用能夠產生整數亂數的函式, 建立標準答案變數對應整數 標準答案 = random.randint(下限, 上限) # pc 所猜的數字也是由亂數函式產生 pc猜的數字 = random.randint(下限, 上限) #print(標準答案, pc猜的數字) #integer int() #string str() #float float() #你猜的數字 = int(input(\"請輸入您所猜的整數:\")) 猜測次數 = 1 while 標準答案 != pc猜的數字: if 標準答案 < pc猜的數字: #print(\"太大了，再猜一次 :)加油\") # 因此已經確定\"pc猜的數字\"不是答案, 因此 - 1 id4 <= \"電腦猜的數字:\" + str(pc猜的數字) + \" 太大了!\" + html.BR() 上限 = pc猜的數字 - 1 else: #print(\"太小了，再猜一次 :)加油\") # 因此已經確定\"pc猜的數字\"不是答案, 因此 + 1 id4 <= \"電腦猜的數字:\" + str(pc猜的數字) + \" 太小了!\" + html.BR() 下限 = pc猜的數字 + 1 #pc猜的數字 = int(input(\"請輸入您所猜的整數:\")) pc猜的數字 = random.randint(下限, 上限) 猜測次數 += 1 #print(\"猜對了！總共猜了\", 猜測次數, \"次\") id4 <= \"電腦猜對了, 答案為: \" + str(標準答案) + \", 總共猜了 \"+ str(猜測次數) + \"次\" + html.BR() 總猜測次數 += 猜測次數 平均猜測次數 = int(總猜測次數/執行次數) #print(\"平均次數\", 平均猜測次數) id4 <= \"平均次數: \" + str(平均猜測次數) Gist https://docs.github.com/en/get-started/writing-on-github/editing-and-sharing-content-with-gists/creating-gists 請根據上列有關 Github Gist 的簡介說明, 將 Gist 相關的參考資料整理到各自的網誌. 針對以上課程內容, 請利用以下留言系統進行討論: Please enable JavaScript to view the comments powered by Disqus.","tags":"五專","url":"./wcm-5j-w7.html"},{"title":"WCM 五專第六週課程內容","text":"五專 WCM 第六週課程, 閱讀 Git 相關原文書, 需要認識多少英文單字. 另外以 iframe 嵌入先前的教學影片, 並摘要各影片內容. Pro Git 電子書 假如要較為深入了解 Git, 就 https://git-scm.com/book/en/v2 這本電子書來說, 需要認識多少英文單字? check_dict_from_cdict_net.py (建立英文單字查詢 html 檔案) get_txt_from_pdf.py (從 pdf 檔案中取出文字內容) 為了能夠執行 get_txt_from_pdf.py, Replit Python3 程式庫需要分別安裝 fitz 以及 pymupdf 等模組. 先安裝 fitz 模組: pip install fitz 再安裝 pymupdf 模組: pip install pymupdf 目前 get_txt_from_pdf.py 會從 pdf 檔案擷取文字內容並直接列印在 console, 請利用 ChatGPt, 要求將擷取的文字內容存為檔案. 請利用上述兩個程式, 以 html 格式整理出上列電子書的英文單字查詢涵義與應用資料. 各學員完成上述 Python 程式操作後, 請將過程與結果整理在自己的 wcm2024 課程網站與網誌中. 另外, 因為 https://git-scm.com/book/en/v2 可以直接從 git-scm.com 網站下載, 一旦上傳到 downloads 目錄取出英文單字查詢超文件之後, 可以不將這個 18 MB 的檔案放在倉儲內, 根據 這裡 的說明, 可得知該如何操作. 操作結果: https://mde.tw/wcm2024/downloads/words_progit.html https://mde.tw/wcm2024/downloads/words_w6_git_add_except.html wcm2024 5j w6 progit vocabulary check up 教學影片: Gist 的應用 Gist 應用 上 Gist 應用 下 教學影片 五專網際內容管理: wcm2024 5j 使用 chatgpt 簡介 1.mp4 wcm2024 5j 建立 wcm2024倉儲與網站 2.mp4 wcm2024 5j 如何更改靜態網站標題 3.mp4 wcm2024 5j w3 1 如何下載可攜程式套件 4.mp4 wcm2024 5j w3 2 下載 sharex 並進行設定 5.mp4 wcm2024 5j w3 3 利用 ShareX 截圖放入個人網站 6.mp4 wcm2024 5j w4 1 建立個人最短網址網站 7.mp4 wcm2024 5j w4 2 如何在 Replit 執行靜態網站檢視 8.mp4 wcm2024 5j w4 3 如何在倉儲中建立 main2 與 static python 檔案 9.mp4 wcm2024 5j w5 與 ChatGPT 詢答的內容整理至網誌 10 針對以上課程內容, 請利用以下留言系統進行討論: Please enable JavaScript to view the comments powered by Disqus.","tags":"五專","url":"./wcm-5j-w6.html"},{"title":"WCM 五專第五週課程內容","text":"第五周將利用與ChatGPT 的對話整理與精密機械科有關的問題詢答紀錄 對 ChatGPT 提問 未來在精密機械專業尋找實習機會, 需要準備哪些資料? 簡歷、求職信、學歷證明、技能證書、作品集、推薦信和個人識別文件。 以目前台灣的產業情況而言, 比較有永續的精密機械產業有哪些? 半導體製造設備、智慧製造、綠色能源設備、生物醫學器材和精密工具機。 現在年輕人, 應該如何學習運用電腦與網站? 基本操作技能、網路安全意識、應用軟體的使用、網路搜索技巧、編程和數位化能力、社交媒體和網路溝通和持續學習與跟進。 以目前 AI 的發展趨勢來看, 會對學校教育有哪些重大影響? 個性化學習和教學、教學輔助工具、遠程教育和線上學習、數據驅動的決策和技能培養和職業準備。 請利用網路搜尋上列問題的可能回應資料, 篩選認為有用的資料放入個人的課程網站中, 並回報到課程倉儲的 討論區","tags":"五專","url":"./wcm-5j-w5.html"},{"title":"WCM 五專第四週課程內容","text":"以下為五專精密機械科網際內容管理課程第四週上課內容, 包括回顧計算機概論, 以及如何在網頁推送至 Github 倉儲之前檢查所編輯的網頁內容. 建立個人最短網址網站 最短網址 Github Pages 服務可以讓 Github 帳號的擁有者, 使用\"帳號.github.io\"作為倉儲名稱, Github 會自動將此網站設定 Github Pages , 假如此倉儲內部帶有超文件, 則此倉儲對應的網址將會是 https://帳號.github.io 說明[如何建立短網址的 Github Pages 網站]教學影片 下載 main2.txt 與 static.txt , 其中包含 main2.py 與 static.py, 只要在 Shell 執行 python3 main2.py 就可以執行倉儲內的靜態網站檢視. 另一方面, 若要取消先前執行 python3 main2.py, 只需要在 Shell 頁面按下 ctrl + c, c 代表 cancle 也就是取消. 然後若要執行動態網站，可以在 Shell 執行 python3 main.py 或者使用 Replit 的 Run 按鍵.","tags":"五專","url":"./wcm-5j-w4.html"},{"title":"WCM 五專第三週課程內容","text":"以下為五專精密機械科網際內容管理課程第三週上課內容, 包括回顧計算機概論, 利用 Github Classroom 進行分組作業派送(名稱為 wcmj), 並且說明如何利用 Github Codespaces 維護個人與分組網站. 配置可攜程式系統 下載可攜程式環境: portable_2024.7z (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB)到自己的隨身中.","tags":"五專","url":"./wcm-5j-w3.html"},{"title":"WCM 五專第一週與第二週課程內容","text":"以下包含五專精密機械科網際內容管理課程第一週與第二週的上課內容, 課程目標首先是讓學員了解如何利用 cmsimde_site 建立網站. 接著則是讓學員了解如何利用 Replit 維護網站內容. 五專 WCM 第一週與第二週課程內容 請學員申請 Github 帳號 請學員申請 Replit 帳號 - 建立使用可以收信的 Email 帳號作為 account, 自選密碼後登入 Replit 一旦在個人 Github 帳號下建立 wcm2024 倉儲後, 可以進入倉儲 Settings 中的 Pages, 將 Branch 分支的 main 分支設為網頁的 root (根目錄), 就可以將 wcm2024 轉為該倉儲的網站, 而其網站的連結將會是: https://帳號.github.io/wcm2024 請學員準備一個 USB 3.0 以上的隨身碟 32GB 或 64GB 都可以, 用來存放可攜程式系統,個人數位私鑰以及其他設定檔案. 一旦在 Github 建立 wcm2024, 而且已經登記 Replit 帳號, 就可以設法讓兩個帳號透過授權, 讓 Replit import wcm2024 倉儲, 啟動網頁編輯後進行改版, 並且轉為靜態網站內容之後, 將資料推回 Github, 就可以更新 Github Pages 上的 wcm2024 靜態網站內容.","tags":"五專","url":"./Starting-5J-WCM-course.html"},{"title":"2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"}]}