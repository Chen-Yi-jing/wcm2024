<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-06-19T13:13:36+08:00</updated><entry><title>WCM w13 內容</title><link href="./wcm-w13-ai-and-guessing-game.html" rel="alternate"></link><published>2024-05-16T00:00:00+08:00</published><updated>2024-06-19T13:13:36+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-05-16:./wcm-w13-ai-and-guessing-game.html</id><summary type="html">&lt;p&gt;網際內容管理課程第十三週, 從單機猜數字遊戲與 AI 應用談起&lt;/p&gt;
</summary><content type="html">&lt;p&gt;網際內容管理課程第十三週, 從單機猜數字遊戲與 AI 應用談起&lt;/p&gt;


&lt;h1&gt;先看看 Linux&lt;/h1&gt;
&lt;p&gt;在 Linux 設定全域 Proxy 伺服器的位置, 可以是 /etc/environment 檔案中的:&lt;/p&gt;
&lt;p&gt;http_proxy="http://your_proxy_server:port"
https_proxy="http://your_proxy_server:port"&lt;/p&gt;
&lt;p&gt;能不能讓每一位學員都擁有遠端登入 stud.cycu.org 這台主機的帳號? How? 擁有帳號, 然後呢?&lt;/p&gt;
&lt;h1&gt;猜猜看遊戲&lt;/h1&gt;
&lt;p&gt;&lt;a href="./../downloads/guess_game.7z"&gt;guess_game.7z&lt;/a&gt; 是在 AI 輔助下, 將簡單的單人 &lt;a href="https://mde.tw/wcm2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/aaced903b90465ed1718edb68e3d10a6/raw/cfce17938843e1f9a9be75d0cf2c2dee7c702291/guess_game.py"&gt;Brython 線上猜數字遊戲&lt;/a&gt; 轉化為可以多人同場比賽猜數字的線上遊戲.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://229.cycu.org:88"&gt;http://229.cycu.org:88&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由於使用 Flask, 直接啟動模式僅用於程式開發, 若要部署在 Windows 或 Linux 電腦上, 還需進行下列考量:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有沒有比較好的啟動模式?&lt;/li&gt;
&lt;li&gt;要如何使用 https? 有沒有必要?&lt;/li&gt;
&lt;li&gt;能不能透過電腦的服務執行猜數字遊戲? 也就是隨著電腦開機後能直接自動執行?&lt;/li&gt;
&lt;li&gt;假如要配置使用者註冊制或儲存比賽資料, 該使用哪一種資料庫? SQLite 就可以, 還是需要使用 PostgreSQL?&lt;/li&gt;
&lt;li&gt;一但部署成功, 該如何設置網站的符號名稱?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最後, 延伸以上的多人網際程式架構, 是不是就可以開發一個網際協同產品開發網站?&lt;/p&gt;
&lt;p&gt;在現今 AI 系統的輔助下, 上列程式開發有沒有變得比較簡單?&lt;/p&gt;
&lt;p&gt;後續猜數字遊戲的開發倉儲: &lt;a href="https://github.com/mdecycu/guess_game"&gt;https://github.com/mdecycu/guess_game&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;值得加入的功能:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;具有管理者模式, 可以重新啟動伺服器.&lt;/li&gt;
&lt;li&gt;可讓參賽者經由 Github、Gmail 或其他支援 &lt;a href="https://developers.google.com/identity/protocols/oauth2"&gt;Oauth2&lt;/a&gt; 登入協定的帳號登入.&lt;/li&gt;
&lt;li&gt;加入資料庫, 儲存參賽者的得分資料、歷史紀錄並提供排行榜等功能.&lt;/li&gt;
&lt;li&gt;加入其他可多人線上參與競技或進行同步對話功能, 或納入其他專業相關的協同設計功能.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;w14 各組啟動並執行網際猜數字遊戲&lt;/h1&gt;
&lt;p&gt;說明影片:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/nVAZJh5PzEM?si=tyhjvi1bqb4rT_dr" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;w14 有關可攜程式系統的批次檔案說明&lt;/h1&gt;
&lt;p&gt;以下影片說明如何針對不同的 Python 版本修改啟動批次檔案, 並利用 AI 取得各指令的詳細說明:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/83g9NFbtR_k?si=XhNGHvvilN3suuS4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;以下影片說明如何在近端電腦執行猜數字遊戲伺服器程式:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/fjheqtLYATg?si=NWsWxWPZHOQIUdpU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;以下影片說明如何配置一個 Flask + Socketio 建立一個非同步的網際內容管理程式:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/bwcsnPzgLg8?si=-7_gDB_Y1mUyAK8M" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;以下為 Python 參考程式:&lt;/p&gt;
&lt;p&gt;將原先沒有 tab 符號介入兩行資料的原始檔案, 利用 Python 轉為 csv 檔案格式:&lt;/p&gt;
&lt;p&gt;處理方式: 逐列透過空白分割, 若隨後沒有資料加入 tab 符號, 若有資料則將空白換為 tab 符號, 然後列印出 (也可以直接存檔)&lt;/p&gt;
&lt;pre class="brush: python"&gt;
import io

def process_file(file_path):
  """
  讀取檔案，處理後回傳處理後的文字。

  Args:
    file_path: 檔案路徑。

  Returns:
    處理後的文字。
  """

  with open(file_path, 'r', encoding='utf-8') as f:
    lines = f.readlines()

  processed_lines = [lines[0].strip()]  # 保留第一行標題

  for line in lines[1:]:
    parts = line.strip().split(" ", 1)  # 只分割一次，以保留後面的空白和中文字
    if len(parts) == 1:
      processed_lines.append(parts[0] + "\t")  # 若沒有後續資料，加tab
    else:
      processed_lines.append(parts[0] + "\t" + parts[1])  # 將空白換成tab

  return "\n".join(processed_lines)

# 測試
file_path = '1a_w14.txt'  # 檔案路徑
processed_text = process_file(file_path)
print(processed_text)
&lt;/pre&gt;

&lt;p&gt;以下程式則可讀取 w14 點名 csv 檔案, 並從期中自評表 csv 檔案中剃除已經退選者的資料:&lt;/p&gt;
&lt;p&gt;處理方式: 利用 csv 模組讀取各列資料, 以 w14 留下的學員學號為基準, 接著讀取期中期望資料時, 只能下仍在 w14 名單中的學員資料&lt;/p&gt;
&lt;pre class="brush: python"&gt;
import csv # 導入 csv 模組，用於處理 csv 檔案

def filter_and_save_csv(rollcall_file, midterm_file, output_file):
  """
  讀取兩個 csv 檔案，篩選學號後儲存。

  Args:
    rollcall_file: 點名 csv 檔案路徑。
    midterm_file: 期中成績 csv 檔案路徑。
    output_file: 輸出 csv 檔案路徑。
  """

  # 讀取點名檔案中的學號
  valid_student_ids = set() # 建立一個空的集合，用於儲存有效的學號
  with open(rollcall_file, 'r', encoding='utf-8') as f: # 開啟點名 csv 檔案，使用 utf-8 編碼讀取
    reader = csv.reader(f) # 建立 csv 讀取器
    next(reader) # 跳過標題列
    for row in reader: # 逐行讀取點名檔案
      student_id = row[0].strip() # 取得學號，並去除前後空白
      valid_student_ids.add(student_id) # 將學號加入到有效的學號集合中

  # 讀取期中成績檔案，篩選學號並儲存
  with open(midterm_file, 'r', encoding='utf-8') as f_in, open(output_file, 'w', encoding='utf-8', newline='') as f_out: 
    # 同時開啟期中成績 csv 檔案（讀取模式）和輸出 csv 檔案（寫入模式），使用 utf-8 編碼，並設定 newline='' 以避免空行
    reader = csv.reader(f_in) # 建立 csv 讀取器
    writer = csv.writer(f_out) # 建立 csv 寫入器
    writer.writerow(next(reader)) # 將期中成績 csv 檔案的第一行（標題列）寫入輸出檔案
    for row in reader: # 逐行讀取期中成績檔案
      student_id = row[0].strip() # 取得學號，並去除前後空白
      if student_id in valid_student_ids: # 檢查學號是否存在於有效的學號集合中
        writer.writerow(row) # 若存在，則將該學生的完整資料寫入輸出檔案

# 設定檔案路徑
rollcall_file = '1a_w14_rollcall.csv' # 點名 csv 檔案路徑
midterm_file = '1a wcm2024 midterm - Sheet1.csv' # 期中成績 csv 檔案路徑
output_file = '1a_wcm2024_midterm_wishful.csv' # 輸出 csv 檔案路徑

# 執行篩選和儲存
filter_and_save_csv(rollcall_file, midterm_file, output_file) # 呼叫函式，執行篩選和儲存操作
&lt;/pre&gt;</content><category term="wcm"></category><category term="w13"></category><category term="AI"></category><category term="Guessing"></category></entry><entry><title>WCM 分組專案</title><link href="./wcm-w12-project.html" rel="alternate"></link><published>2024-05-06T00:00:00+08:00</published><updated>2024-05-06T07:43:40+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-05-06:./wcm-w12-project.html</id><content type="html">&lt;p&gt;五專網際內容管理課程第十二週專案&lt;/p&gt;
</content><category term="Project"></category><category term="Angry bird"></category><category term="w12"></category></entry><entry><title>WCM 第 11 週課程內容</title><link href="./wcm-w11-Brython.html" rel="alternate"></link><published>2024-05-02T00:00:00+08:00</published><updated>2024-06-19T13:13:10+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-05-02:./wcm-w11-Brython.html</id><summary type="html">&lt;p&gt;網際內容管理第 11 週課程, 說明如何在網頁中加入 Brython 程式應用&lt;/p&gt;
</summary><content type="html">&lt;p&gt;網際內容管理第 11 週課程, 說明如何在網頁中加入 Brython 程式應用&lt;/p&gt;


&lt;h1&gt;1a 評分倉儲&lt;/h1&gt;
&lt;p&gt;倉儲: &lt;a href="https://github.com/mdewcm2024/1astud-site"&gt;https://github.com/mdewcm2024/1astud-site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網站: &lt;a href="https://mdewcm2024.github.io/1astud-site"&gt;https://mdewcm2024.github.io/1astud-site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有關 git pull 評分倉儲之後的處理要點:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/INs2QE2_A6s?si=-4hwUy5l1FA0bw36" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;各組員或各組先將改版資料推向個人或分組的倉儲分支後, 再與主分支的版本內容合併:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/IeCdIhAebec?si=Com0Cz-TKJ5n82wf" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;5j 評分倉儲&lt;/h1&gt;
&lt;p&gt;倉儲: &lt;a href="https://github.com/mdewcm2024/5jstud-5jsite"&gt;https://github.com/mdewcm2024/5jstud-5jsite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網站: &lt;a href="https://mdewcm2024.github.io/5jstud-5jsite/"&gt;https://mdewcm2024.github.io/5jstud-5jsite/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="nfulist"&gt;從教務主機直接擷取資料&lt;/h1&gt;
&lt;p&gt;利用 &lt;a href="./../downloads/wsgi_v1_py.txt"&gt;wsgi_v1.py&lt;/a&gt; 可以取得結果: &lt;a href="./../downloads/wsgi_v1_output.txt"&gt;wsgi_v1_output.txt&lt;/a&gt; 表示可以利用 Flask 建置網站程式取下教務主機中的相關資料.&lt;/p&gt;
&lt;p&gt;以下影片說明如何利用 wsgi_v2.py 擷取各學期班級課表:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/Seg9jHuh72I?si=KKgo5loKzQY_7wZQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;說明如何將 Python 程式配置為 Windows 操作系統中的服務:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/UgXZcpfSYXU?si=vNYGReZXxRsk32Kt" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;經由上述影片將程式配置在伺服器後, 可以從&lt;a href="http://229.cycu.org:9447/?semester=901&amp;amp;classid=設一甲"&gt;229 主機取下設一甲 90 學年度第一學期的課表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;利用 &lt;a href="./../downloads/wsgi_v2_py.txt"&gt;wsgi_v2.py&lt;/a&gt; 可以取得以下結果:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../images/wsgi_v2_output.png" width="551" height="647" /&gt;&lt;/p&gt;
&lt;h1&gt;Brython 程式環境&lt;/h1&gt;
&lt;p&gt;將 &lt;a href="/downloads/brython_w_editor_html.txt"&gt;brython_w_editor_html.txt&lt;/a&gt; 超文件內容放入網誌中, 即可得到下列內容.&lt;/p&gt;
&lt;p&gt;若要放入動態網站, 則必須注意各引用頁面是由 cmsimde 目錄中啟動, 必須使用 &lt;a href="/downloads/brython_on_editor.txt"&gt;brython_on_editor.txt&lt;/a&gt; 超文件格式.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (&lt;a href="./../downloads/practice_html.txt"&gt;practice_html.txt&lt;/a&gt; 動態頁面超文件).&lt;/p&gt;
&lt;p&gt;&lt;a href="./../downloads/practice_html.txt"&gt;practice_html.txt&lt;/a&gt; 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.&lt;/p&gt;
&lt;p&gt;亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 &lt;a href="https://docs.python.org/3/tutorial/classes.html"&gt;class&lt;/a&gt; 後, 在範例導入時透過 &lt;a href="https://docs.python.org/3/tutorial/classes.html#instance-objects"&gt;instance&lt;/a&gt; 引用.&lt;/p&gt;
&lt;pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"&gt;&amp;lt;!-- 啟動 Brython --&amp;gt;
&amp;lt;script&amp;gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&amp;lt;/script&amp;gt;&lt;/pre&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="WCM"></category><category term="Brython"></category><category term="w11"></category></entry><entry><title>WCM 分組專案</title><link href="./wcm-w10-project.html" rel="alternate"></link><published>2024-04-18T11:00:00+08:00</published><updated>2024-04-29T07:23:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-04-18:./wcm-w10-project.html</id><summary type="html">&lt;p&gt;網際內容管理課程分組專案 - 網頁與 Brython 程式應用&lt;/p&gt;
</summary><content type="html">&lt;p&gt;網際內容管理課程分組專案 - 網頁與 Brython 程式應用&lt;/p&gt;


&lt;h1&gt;分組專案&lt;/h1&gt;
&lt;p&gt;51233101: &lt;a href="https://github.com/Chen-Yi-jing/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://Chen-Yi-jing.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233102: &lt;a href="https://github.com/51233102/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233102.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233103: &lt;a href="https://github.com/Lin-Si-yu/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://Lin-Si-yu.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233104: &lt;a href="https://github.com/kylechan092804/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://kylechan092804.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233105: &lt;a href="https://github.com/51233105/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233105.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233106: &lt;a href="https://github.com/51233106/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233106.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233107: &lt;a href="https://github.com/51233107/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233107.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233108: &lt;a href="https://github.com/51233108/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233108.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233109: &lt;a href="https://github.com/51233109/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233109.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233110: &lt;a href="https://github.com/ssssuuuuyyyyy/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://ssssuuuuyyyyy.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233111: &lt;a href="https://github.com/51233111/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233111.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233112: &lt;a href="https://github.com/51233112/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233112.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233113: &lt;a href="https://github.com/51233113/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233113.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233114: &lt;a href="https://github.com/51233114/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233114.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233115: &lt;a href="https://github.com/51233115/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233115.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233116: &lt;a href="https://github.com/51233116/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233116.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233117: &lt;a href="https://github.com/51233117/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233117.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233118: &lt;a href="https://github.com/51233118/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233118.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233119: &lt;a href="https://github.com/boyi1217/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://boyi1217.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233120: &lt;a href="https://github.com/Yaosunset/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://Yaosunset.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233121: &lt;a href="https://github.com/51233121/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233121.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233122: &lt;a href="https://github.com/zsw08/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://zsw08.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233123: &lt;a href="https://github.com/51233123/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233123.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233124: &lt;a href="https://github.com/51233124/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233124.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233125: &lt;a href="https://github.com/gyjbujy/51233125/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://gyjbujy/51233125.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233126: &lt;a href="https://github.com/51233126/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233126.github.io/wcm2024"&gt;網站&amp;lt;/a&lt;br&gt;
51233127: &lt;a href="https://github.com/kaixiang1220/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://kaixiang1220.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233128: &lt;a href="https://github.com/51233128/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233128.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233129: &lt;a href="https://github.com/51233129/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233129.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233130: &lt;a href="https://github.com/51233130/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233130.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233131: &lt;a href="https://github.com/51233131/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233131.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233132: &lt;a href="https://github.com/51233132/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233132.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233133: &lt;a href="https://github.com/51233133/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233133.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233134: &lt;a href="https://github.com/51233134/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233134.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233135: &lt;a href="https://github.com/51233135/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233135.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233136: &lt;a href="https://github.com/51233136/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233136.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233137: &lt;a href="https://github.com/51233137/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233137.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233138: &lt;a href="https://github.com/51233138/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233138.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233139: &lt;a href="https://github.com/51233139/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233139.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233140: &lt;a href="https://github.com/51233140/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233140.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233141: &lt;a href="https://github.com/51233141/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233141.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233142: &lt;a href="https://github.com/51233142/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233142.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233143: &lt;a href="https://github.com/51233143/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233143.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;
51233144: &lt;a href="https://github.com/51233144/wcm2024"&gt;倉儲&lt;/a&gt; | &lt;a href="https://51233144.github.io/wcm2024"&gt;網站&lt;/a&gt;&lt;br&gt;&lt;/p&gt;</content><category term="Project"></category><category term="Brython"></category><category term="w10"></category></entry><entry><title>WCM 課程期中整理</title><link href="./wcm-midterm.html" rel="alternate"></link><published>2024-04-14T00:00:00+08:00</published><updated>2024-06-19T13:12:43+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-04-14:./wcm-midterm.html</id><summary type="html">&lt;p&gt;網際內容管理課程的英文名稱為 Web-based Content Management, 課程目標是讓學員得以運用網頁來管理與個人或專業領域應用相關的內容. 當然, 我們還想啟發學員對於網頁與內容管理發展趨勢的思考, 並且針對學員選課, 評定出一個合理的修課成績!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;網際內容管理課程的英文名稱為 Web-based Content Management, 課程目標是讓學員得以運用網頁來管理與個人或專業領域應用相關的內容. 當然, 我們還想啟發學員對於網頁與內容管理發展趨勢的思考, 並且針對學員選課, 評定出一個合理的修課成績!&lt;/p&gt;


&lt;h1&gt;網頁式內容管理&lt;/h1&gt;
&lt;p&gt;目前無論是 Github 的 Codespaces, Gitpod 或 Replit 都讓使用者可以直接在網頁瀏覽器中維護網站內容. 其中 Replit 還提供手機 App 讓使用者透過手機或平板管理網頁內容.&lt;/p&gt;
&lt;p&gt;網際內容管理課程將網頁內容管理系統與網頁資料放在同一個倉儲中, 且讓使用者寄存在 Github 中, 只要能夠執行 Python 的雲端或近端環境都能開啟網頁編輯程式進行改版, 而編輯完成的網頁資料則可在 Github 倉儲中透過 Pages 的全球資訊網伺服器功能呈現網站內容.&lt;/p&gt;
&lt;p&gt;網際內容管理課程所採用的管理系統採用 Python Flask 編寫, 其中除了章節式的網頁內容採超文件的 H 標註進行分頁外, 還導入 Pelican 與 Reveal.js 等兩個延伸套件, 其中 Pelican 可用來建立網誌, 而 Reveal.js 則可用來建立網頁上的簡報資料.&lt;/p&gt;
&lt;p&gt;學習議題: 如何建立 Github 上的網站? 如何管理內容? 如何建立章節式網站? 能放入甚麼多媒體內容? 靜態圖文? 動態圖文? 線上遊戲? 3D 零組件展示? 如何建立網頁系統中的網誌? 如何建立網頁系統中的簡報?&lt;/p&gt;
&lt;h1&gt;Python 程式系統&lt;/h1&gt;
&lt;p&gt;上課用的電腦中配置了一套舊版的可攜式 Python 程式系統, 可讓使用者建立新版的可攜式 Python 程式系統, 放入 USB 隨身碟後, 可以在任何一台 64 位元的 Winodws 操作系統中使用, 主要目的除了可用來維護位於 Github 的網頁內容之外, 也可用來開發各種 Python 程式, 或與其他 Windows 應用套件結合使用, 例如: 與 CoppeliaSim 機器人模擬場景結合, 建立機電控制系統, 或與 Siemens NX 的 API 延伸程式結合應用.&lt;/p&gt;
&lt;p&gt;學習議題: 如何利用電腦輔助設計室的舊 Python 建立新的可攜環境? 在網頁中置入 Python 語法的程式加上對 Javascript 與超文件語法的了解後, 能夠應用在那些領域? (精密)機械設計流程? 設計運算? 特定系統模擬?&lt;/p&gt;
&lt;h1&gt;網頁上的 IDE&lt;/h1&gt;
&lt;p&gt;IDE 是甚麼? 可以將 Replit、Codespaces 與 Gitpod 當成 IDE 用來開發各種程式嗎? 與近端操作系統上的開發有何不同? 多人協同? 這樣安全嗎?&lt;/p&gt;
&lt;p&gt;學習議題: 學會使用網頁上的各種 IDE 之後, 有沒有甚麼感想或心得?&lt;/p&gt;
&lt;h1&gt;AI 工具&lt;/h1&gt;
&lt;p&gt;ChatGPT 與 Gemini Pro 都可以直接利用 Gmail 帳號登入, 初級應用目前都可免費使用, 這兩個 AI 工具可以協助我們解決甚麼問題? 為什麼有人驚這些工具為天人? 有人卻覺得還好而已, 並無法從中挖出甚麼資料?&lt;/p&gt;
&lt;p&gt;學習議題: AI 工具曾經協助我們解決甚麼問題? &lt;/p&gt;
&lt;h1&gt;實作練習問題&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;一份採 UTF-8 中文編碼的 .csv (例如: &lt;a href="http://229.cycu.org/5j_wcm2024_midterm.csv"&gt;5j_wcm2024_midterm.csv&lt;/a&gt;)在 Windows Excel 2016 開啟之後呈現亂碼, 該如何設定改為用 UTF-8 編碼?&lt;/li&gt;
&lt;li&gt;請根據上一個 .csv (csv 是甚麼格式的資料?) 檔案內容, 在個人的網頁與網誌中列出每一位學員的 github wcm2024 倉儲與網頁連結. (第一次請直接用手動輸入的方式建立 html 檔案內容, 之後再思考如何讀取此一檔案後, 能直接將所需要的倉儲與網頁連結呈現在個人網站或網誌的特定位置)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://229.cycu.org/2023%20Programming%20for%20Absolute%20Beginners%20-%20Using%20the%20JavaScript%20Programming%20Language.pdf"&gt;這一本書&lt;/a&gt; 的第一章在講甚麼?能不能將其中練習編寫的內容, 放入個人的網頁與網誌?&lt;/li&gt;
&lt;li&gt;為什麼 wcm2024 倉儲中的 cms.bat 在 Windows 啟動之後, 若同時多人連線, 系統會無法負荷, 同一台電腦硬體有沒有可能採其他方法啟動, 可以同時讓多人連線且不會產生延遲或停頓的問題? 例如採 wsgi 方式啟動, 這該如何進行? 當設定好讓 Flask 編寫的網際內容管理系統透過效率較高的 wsgi 模式執行後, 如何讓執行程式與電腦開機同步執行? 直接執行套件與透過 Windows services 執行有何不同? NSSM 是什麼工具?&lt;/li&gt;
&lt;li&gt;如何在一台 Windows (Ubuntu) 電腦快速建立多人帳號? 建立多人帳號之後, 如何透過程式將帳號密碼寄給使用者?&lt;/li&gt;
&lt;li&gt;承接上一題: 一個採用 Flask 編寫的伺服器系統, 該如何在  Windows 環境中以 wsgi 方式啟動?&lt;/li&gt;
&lt;li&gt;wcm2024 課程中曾經提到可以利用舊的可攜 Python 程式環境建立新的 Python 可攜程式環境, 但該如何進行?&lt;/li&gt;
&lt;li&gt;假如希望直接在網頁中利用 Brython 建立一個掃地機器人的工作模擬系統, 該如何進行?&lt;/li&gt;
&lt;li&gt;wcm2024 課程除了可以使用 &lt;a href="https://chat.openai.com/"&gt;ChatGPT&lt;/a&gt; 外, 還能夠使用 Google &lt;a href="https://developers.googleblog.com/2024/04/gemini-15-pro-in-public-preview-with-new-features.html"&gt;Gemini Pro&lt;/a&gt;, 請試著在解決上列問題時, 善用這兩個系統, 並將使用過程與心得整理在個人的課程網頁與網誌中.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="brush: python"&gt;
    from browser import document, window, html, load

    # 动态加载 Matter.js 库 (假设使用 CDN)
    load("https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.19.0/matter.min.js")
    #print(dir(window.Matter.Bodies.rectangle()))
    # 创建 canvas 元素
    canvas = html.CANVAS(width=800, height=800)
    canvas.id = "canvas"
    canvas.style = {"border": "1px solid red"}  # 添加边框样式
    brython_div = document["brython_div1"]
    brython_div &lt;= canvas


    # 获取 Matter.js 模块别名
    matter = window.Matter
    Engine = matter.Engine
    Render = matter.Render
    Runner = matter.Runner
    Bodies = matter.Bodies
    Composite = matter.Composite

    # 创建引擎
    engine = Engine.create()
    print(dir(engine))
    # 创建渲染器，使用 canvas 元素的 ID
    render = Render.create({
        'element': document['canvas'],
        'engine': engine
    })

    # 创建红色矩形
    rectangle = Bodies.rectangle(200, 200, 80, 80, {
        'render': {
            'fillStyle': 'red'
        }
    })
    print(rectangle)

    # 将矩形添加到世界
    Composite.add(engine.world, [rectangle])

    # 创建运行器
    runner = Runner.create()

    # 运行引擎
    Runner.run(runner, engine)

    # 运行渲染器
    Render.run(render)

&lt;/pre&gt;

&lt;p&gt;針對以上課程內容, 請利用以下留言系統進行討論:&lt;/p&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script&gt;
/**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');
    s.src = 'https://https-mde-tw-eng.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="https://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</content><category term="WCM"></category><category term="Brython"></category><category term="w9"></category></entry><entry><title>WCM 五專第八週課程內容</title><link href="./wcm-5j-w8.html" rel="alternate"></link><published>2024-04-08T11:00:00+08:00</published><updated>2024-06-19T13:08:21+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-04-08:./wcm-5j-w8.html</id><summary type="html">&lt;p&gt;五專 WCM 第八週課程, 建議學員長期維護個人的履歷網站, 並註冊領英帳號.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;五專 WCM 第八週課程, 建議學員長期維護個人的履歷網站, 並註冊領英帳號.&lt;/p&gt;


&lt;h1&gt;領英&lt;/h1&gt;
&lt;p&gt;有關&lt;a href="https://zh.wikipedia.org/wiki/%E9%A0%98%E8%8B%B1"&gt;領英&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.linkedin.com/signup?_l=zh-tw"&gt;註冊領英帳號&lt;/a&gt; - 請直接以 Gmail 登入, 並設定身分為學生.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.google.com/search?q=Do+you+actually+need+a+website+in+2024"&gt;Do you actually need a website?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cd2024/discussions/5"&gt;人格特質的飬成？&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Pull Requests&lt;/h1&gt;
&lt;p&gt;以 &lt;a href="https://github.com/51233138/wcm2024"&gt;https://github.com/51233138/wcm2024&lt;/a&gt; 為例, scrum-1 登入 Github 後, fork 51233138 帳號下的  wcm2024 倉儲後, 設法改版後, 利用 Pull Requests 的流程要求 51233138 將改版資料&lt;a href="https://github.com/51233138/wcm2024/pull/1"&gt;拉回合併&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;網際內容管理課程回顧&lt;/h1&gt;
&lt;p&gt;學員簡報與自評 - 請製作一個帶有說明字幕的期中報告影片, 放入個人的 wcm2024 影片, 以便在 w9 期中考週進行簡報與自評．&lt;/p&gt;
&lt;p&gt;申請 Github 帳號: 目的是希望針對網站內容改版的每一個版本都能有效取得&lt;/p&gt;
&lt;p&gt;申請 Replit 帳號: 可以在網頁瀏覽器或手機 App 修改網站內容&lt;/p&gt;
&lt;p&gt;學習 Brython 程式: 可以直接在網頁上執行與產品設計有關的數值運算&lt;/p&gt;
&lt;h1&gt;Angry Bird&lt;/h1&gt;
&lt;p&gt;第十週開始是否可以將下列程式改採 Brython 編寫?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/angry-birds-python"&gt;any-bird-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/Gaming-in-Python/tree/master/Angry_Birds"&gt;Angry Birds&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/ab"&gt;ab&lt;/a&gt;, &lt;a href="https://mde.tw/ab"&gt;執行 ab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;參考: &lt;a href="https://github.com/mdecycu/webgame"&gt;https://github.com/mdecycu/webgame&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;針對以上課程內容, 請利用以下留言系統進行討論:&lt;/p&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script&gt;
/**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');
    s.src = 'https://https-mde-tw-eng.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="https://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</content><category term="五專"></category><category term="Brython"></category><category term="w8"></category></entry><entry><title>WCM 五專第七週課程內容</title><link href="./wcm-5j-w7.html" rel="alternate"></link><published>2024-04-01T00:00:00+08:00</published><updated>2024-06-19T13:08:00+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-04-01:./wcm-5j-w7.html</id><summary type="html">&lt;p&gt;五專 WCM 第七週課程, 開始說明如何在頁面配置 Brython 環境, 並將 Brython 程式配置在個人 Github 帳號下的 Gist.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;五專 WCM 第七週課程, 開始說明如何在頁面配置 Brython 環境, 並將 Brython 程式配置在個人 Github 帳號下的 Gist.&lt;/p&gt;


&lt;h1&gt;練習利用程式建立單字查詢網頁&lt;/h1&gt;
&lt;p&gt;wcm2024 5j w7 利用 Python 建立 Javascript 電子書的單字查詢超文件&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/dJB6unDgngA?si=vWHr08lU6LbVJU4u" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;利用 &lt;a href="https://mde.tw/wcm2024/downloads/2.txt"&gt;2.txt&lt;/a&gt; 與 &lt;a href="https://mde.tw/wcm2024/downloads/1.txt"&gt;1.txt&lt;/a&gt; Python 程式, 從下列電子書建立英文單字查詢網頁:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://link.springer.com/book/10.1007/978-1-4842-8751-4"&gt;2023 Programming for Absolute Beginners - Using the JavaScript Programming Language&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/wcm2024/downloads/words_2023_Programming%20for%20Absolute%20Beginners.html"&gt;單字查詢網頁&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Brython 程式&lt;/h1&gt;
&lt;p&gt;首先, 對 ChatGPT 提問: Brython 是甚麼程式語言? 該如何使用?&lt;/p&gt;
&lt;p&gt;回答:&lt;/p&gt;
&lt;p&gt;Brython 是一種在瀏覽器中運行的 Python 解譯器。它允許您在網頁上使用 Python 來編寫 Web-based 前端程式，而無需安裝任何套件或外部解譯器。&lt;/p&gt;
&lt;p&gt;要使用 Brython，您可以按照以下步驟進行：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在您的網頁中引入 Brython 的 JavaScript 程式。就可以透過 CDN 或將文件下載到網頁中。&lt;/li&gt;
&lt;li&gt;在 HTML 文件中，使用 &lt;code&gt;&amp;lt;script type="text/python"&amp;gt;&lt;/code&gt; 標籤來編寫 Python 程式碼。&lt;/li&gt;
&lt;li&gt;當網頁加載時，Brython 會自動解譯並執行這些 Python 程式碼，並將結果呈現在網頁上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如此就可以在瀏覽器中使用 Python 編寫動態網頁，而無需使用 JavaScript。這對於喜歡 Python 語法的開發者來說是一個很好的選擇。&lt;/p&gt;
&lt;p&gt;再問: 可以舉一個簡單 Brython 程式範例, 從 1 累加到 10, 然後在網頁中以 html 列出運算結果&lt;/p&gt;
&lt;p&gt;回答:&lt;/p&gt;
&lt;pre class="brush: html"&gt;
&lt;!-- 導入 Brython 程式庫 --&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython();
}
&lt;/script&gt;
&lt;h1&gt;累加結果：&lt;/h1&gt;
&lt;!-- 顯示結果標註 --&gt;
&lt;ul id="result"&gt;&lt;/ul&gt;

&lt;!-- 在 &lt;script type="text/python"&gt; 標籤中編寫 Python 代碼 --&gt;
&lt;script type="text/python"&gt;
from browser import document
result_list = document.getElementById("result")
# sum 初始值設為 0
sum = 0
init = 1
upto = 10
# 利用 for 重複迴圈與變數加法進行累加
for i in range(init, upto+1):
    sum = sum + i
    # skip the first one
    if i !=1:
        result_list.innerHTML += "&lt;li&gt;{} + {} = {}&lt;/li&gt;".format(sum-i, i, sum)
&lt;/script&gt;
&lt;/pre&gt;
&lt;!-- 導入 Brython 程式庫 --&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython();
}
&lt;/script&gt;
&lt;h1&gt;累加結果：&lt;/h1&gt;
&lt;!-- 顯示結果標註 --&gt;
&lt;ul id="result"&gt;&lt;/ul&gt;

&lt;!-- 在 &lt;script type="text/python"&gt; 標籤中編寫 Python 代碼 --&gt;
&lt;script type="text/python"&gt;
from browser import document
result_list = document.getElementById("result")
# sum 初始值設為 0
sum = 0
init = 1
upto = 10
# 利用 for 重複迴圈與變數加法進行累加
for i in range(init, upto+1):
    sum = sum + i
    # skip the first one
    if i !=1:
        result_list.innerHTML += "&lt;li&gt;{} + {} = {}&lt;/li&gt;".format(sum-i, i, sum)
&lt;/script&gt;

&lt;p&gt;請根據上面的 Brython 範例, 寫出能夠從 https://mde.tw/cd2024/content/About.html  取出 anchor 字串為 "2021_odoo_reading.html" 的 href 資料&lt;/p&gt;
&lt;p&gt;網頁中特定 anchor 的 href 資料：
 &lt;span id="result2"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;!-- 在 &lt;script type="text/python"&gt; 標籤中編寫 Python 代碼 --&gt;
&lt;script type="text/python"&gt;
from browser import document
# 從網站讀取超文件資料
html_content = open("https://mde.tw/cd2024/content/About.html").read()
# 列出檢查
#print(html_content)
# 將 HTML 內容轉換為 DOM 物件
dom = document.createElement('html')
dom.innerHTML = html_content
result_list = document.getElementById("result2")

# 查找所有的 anchor 標籤
anchors = dom.querySelectorAll('a')
# 列出檢查
#print(anchors)
# 遍歷每個 anchor 標籤
for anchor in anchors:
    # 檢查 anchor 文字是否為特定值
    if anchor.text.strip() == "2021_odoo_reading.html":
        # 在網頁上顯示 href 資料
        result_list.innerHTML += "&lt;li&gt;{}&lt;/li&gt;".format(anchor.getAttribute('href')) 
&lt;/script&gt;

&lt;p&gt;以下為 Brython 由電腦執行猜數字遊戲:&lt;/p&gt;
&lt;p&gt;wcm2024 5j w7 intro brython number guessing&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/UJXBDkeHNII?si=m7a4MgSn93KyDXNJ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://mde.tw/wcm2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/8ba6fa28317bc7a784d8350e7bc33580/raw/cb3b9b3e455c54381482d2f98f153442eff93ec4/auto_guessing_game.py"&gt;自動猜數字遊戲&lt;/a&gt; Brython 程式碼:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 程式自動猜數字遊戲
# 從 browser 導入 document, html 與 alert 模組
from browser import document, html, alert
# 導入 random 模組
import random

# 宣告一個變數, 名稱為 "id4", 與超文件中 id 為 "brython_div1" 的物件進行對應
id4 = document["brython_div1"]
# 宣告一個變數, 名稱為 "執行次數", 起始對應為 100
執行次數 = 100
# 宣告 "總猜測次數" 變數, 起始對應為 0
總猜測次數 = 0
# range() 是一個能夠建立一系列數字的函式
for i in range(執行次數):
    # "&lt;=" 是 Brython 特有符號, 用來將超文字指向左邊對應的變數在網頁超文件標註中的位置
    id4 &lt;= "第" + str(i+1) + "次玩:" + html.BR()
    下限 = 1
    上限 = 100
    # 利用能夠產生整數亂數的函式, 建立標準答案變數對應整數
    標準答案 = random.randint(下限, 上限)
    # pc 所猜的數字也是由亂數函式產生
    pc猜的數字 = random.randint(下限, 上限)
    #print(標準答案, pc猜的數字)
    #integer int()
    #string str()
    #float float()
    #你猜的數字 = int(input("請輸入您所猜的整數:"))
    猜測次數 = 1
    while 標準答案 != pc猜的數字:
        if 標準答案 &lt; pc猜的數字:
            #print("太大了，再猜一次 :)加油")
            # 因此已經確定"pc猜的數字"不是答案, 因此 - 1
            id4 &lt;= "電腦猜的數字:" + str(pc猜的數字) + " 太大了!" + html.BR()
            上限 = pc猜的數字 - 1
        else:
            #print("太小了，再猜一次 :)加油")
            # 因此已經確定"pc猜的數字"不是答案, 因此 + 1
            id4 &lt;= "電腦猜的數字:" + str(pc猜的數字) + " 太小了!" + html.BR()
            下限 = pc猜的數字 + 1
        #pc猜的數字 = int(input("請輸入您所猜的整數:"))
        pc猜的數字 = random.randint(下限, 上限)
        猜測次數 += 1
    #print("猜對了！總共猜了", 猜測次數, "次")
    id4 &lt;= "電腦猜對了, 答案為: " + str(標準答案) + ", 總共猜了 "+ str(猜測次數) + "次" + html.BR()
    總猜測次數 += 猜測次數
平均猜測次數 = int(總猜測次數/執行次數)
#print("平均次數", 平均猜測次數)
id4 &lt;= "平均次數: " + str(平均猜測次數)
&lt;/pre&gt;

&lt;h1&gt;Gist&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://docs.github.com/en/get-started/writing-on-github/editing-and-sharing-content-with-gists/creating-gists"&gt;https://docs.github.com/en/get-started/writing-on-github/editing-and-sharing-content-with-gists/creating-gists&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;請根據上列有關 Github Gist 的簡介說明, 將 Gist 相關的參考資料整理到各自的網誌.&lt;/p&gt;
&lt;p&gt;針對以上課程內容, 請利用以下留言系統進行討論:&lt;/p&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script&gt;
/**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');
    s.src = 'https://https-mde-tw-eng.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="https://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</content><category term="五專"></category><category term="Brython"></category><category term="w7"></category></entry><entry><title>WCM 五專第六週課程內容</title><link href="./wcm-5j-w6.html" rel="alternate"></link><published>2024-03-25T00:00:00+08:00</published><updated>2024-06-19T13:07:14+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-25:./wcm-5j-w6.html</id><summary type="html">&lt;p&gt;五專 WCM 第六週課程, 閱讀 Git 相關原文書, 需要認識多少英文單字. 另外以 iframe 嵌入先前的教學影片, 並摘要各影片內容.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;五專 WCM 第六週課程, 閱讀 Git 相關原文書, 需要認識多少英文單字. 另外以 iframe 嵌入先前的教學影片, 並摘要各影片內容.&lt;/p&gt;


&lt;h1&gt;Pro Git 電子書&lt;/h1&gt;
&lt;p&gt;假如要較為深入了解 Git, 就 &lt;a href="https://git-scm.com/book/en/v2"&gt;https://git-scm.com/book/en/v2&lt;/a&gt; 這本電子書來說, 需要認識多少英文單字?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.githubusercontent.com/mdecycu/44e92707c50b22d2e676da8262f592be/raw/edbd164ea99d2247853ae200fc145a90c934f7d8/check_dict_from_cdict_net.py"&gt;check_dict_from_cdict_net.py&lt;/a&gt; (建立英文單字查詢 html 檔案)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.githubusercontent.com/mdecycu/44e92707c50b22d2e676da8262f592be/raw/b37ad6acfd6000d91aaec806d9558994f70e1891/get_txt_from_pdf.py"&gt;get_txt_from_pdf.py&lt;/a&gt; (從 pdf 檔案中取出文字內容)&lt;/p&gt;
&lt;p&gt;為了能夠執行 get_txt_from_pdf.py, Replit Python3 程式庫需要分別安裝 fitz 以及 pymupdf 等模組.&lt;/p&gt;
&lt;p&gt;先安裝 fitz 模組: pip install fitz&lt;/p&gt;
&lt;p&gt;再安裝 pymupdf 模組: pip install pymupdf &lt;/p&gt;
&lt;p&gt;目前 get_txt_from_pdf.py 會從 pdf 檔案擷取文字內容並直接列印在 console, 請利用 ChatGPt, 要求將擷取的文字內容存為檔案.&lt;/p&gt;
&lt;p&gt;請利用上述兩個程式, 以 html 格式整理出上列電子書的英文單字查詢涵義與應用資料.&lt;/p&gt;
&lt;p&gt;各學員完成上述 Python 程式操作後, 請將過程與結果整理在自己的 wcm2024 課程網站與網誌中.&lt;/p&gt;
&lt;p&gt;另外, 因為 &lt;a href="https://git-scm.com/book/en/v2"&gt;https://git-scm.com/book/en/v2&lt;/a&gt; 可以直接從 git-scm.com 網站下載, 一旦上傳到 downloads 目錄取出英文單字查詢超文件之後, 可以不將這個 18 MB 的檔案放在倉儲內, 根據&lt;a href="https://stackoverflow.com/questions/4475457/add-all-files-to-a-commit-except-a-single-file"&gt;這裡&lt;/a&gt;的說明, 可得知該如何操作.&lt;/p&gt;
&lt;p&gt;操作結果:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/wcm2024/downloads/words_progit.html"&gt;https://mde.tw/wcm2024/downloads/words_progit.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/wcm2024/downloads/words_w6_git_add_except.html"&gt;https://mde.tw/wcm2024/downloads/words_w6_git_add_except.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;wcm2024 5j w6 progit vocabulary check up 教學影片:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/gqP5Mbg4w5M?si=yD_mh1hg9az2_dvV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;Gist 的應用&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://ithelp.ithome.com.tw/articles/10206233"&gt;Gist 應用 上&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ithelp.ithome.com.tw/articles/10206277"&gt;Gist 應用 下&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;教學影片&lt;/h1&gt;
&lt;p&gt;五專網際內容管理:&lt;/p&gt;
&lt;p&gt;wcm2024 5j 使用 chatgpt 簡介 1.mp4&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/gbk84hYUHDo?si=UnKel_0fHkvFaCdz" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;wcm2024 5j 建立 wcm2024倉儲與網站 2.mp4&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/ssVt1v2QPqA?si=QsAcAB8rxNjs5IK4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;wcm2024 5j 如何更改靜態網站標題 3.mp4&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/JJPzMNKYpK8?si=MxTbAE2B0-bPZngd" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;wcm2024 5j w3 1 如何下載可攜程式套件 4.mp4&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/tQG3PlwHkGQ?si=LgXwi_L5SZxPLAjG" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;wcm2024 5j w3 2 下載 sharex 並進行設定 5.mp4&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/Y7HmSwv8eY0?si=NxVz-xEFFG2Xd1PT" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;wcm2024 5j w3 3 利用 ShareX 截圖放入個人網站 6.mp4&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/aZzfxdfAo0o?si=6RvvvYHA34NenqUi" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;wcm2024 5j w4 1 建立個人最短網址網站 7.mp4&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/aOJF92GOA6w?si=0jpAB2HVklPjtrfw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;wcm2024 5j w4 2 如何在 Replit 執行靜態網站檢視 8.mp4&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/CWhP4JQTzyE?si=Zi3u7xb4iLP77yXI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;wcm2024 5j w4 3 如何在倉儲中建立 main2 與 static python 檔案 9.mp4&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/ptTG5lOO0B0?si=CTZ4wrq8jZfYvaLl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;wcm2024 5j w5 與 ChatGPT 詢答的內容整理至網誌 10&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/6yJTGypDlkc?si=CWXeQ2u2MkOhpjlF" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;針對以上課程內容, 請利用以下留言系統進行討論:&lt;/p&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script&gt;
/**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');
    s.src = 'https://https-mde-tw-eng.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="https://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</content><category term="五專"></category><category term="Video"></category><category term="w6"></category></entry><entry><title>WCM 五專第五週課程內容</title><link href="./wcm-5j-w5.html" rel="alternate"></link><published>2024-03-18T00:00:00+08:00</published><updated>2024-06-19T11:59:06+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-18:./wcm-5j-w5.html</id><summary type="html">&lt;p&gt;第五周將利用與ChatGPT 的對話整理與精密機械科有關的問題詢答紀錄&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY--&gt;

&lt;h1&gt;對 ChatGPT 提問&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;未來在精密機械專業尋找實習機會, 需要準 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;第五周將利用與ChatGPT 的對話整理與精密機械科有關的問題詢答紀錄&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY--&gt;

&lt;h1&gt;對 ChatGPT 提問&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;未來在精密機械專業尋找實習機會, 需要準備哪些資料?
簡歷、求職信、學歷證明、技能證書、作品集、推薦信和個人識別文件。&lt;/li&gt;
&lt;li&gt;以目前台灣的產業情況而言, 比較有永續的精密機械產業有哪些?
半導體製造設備、智慧製造、綠色能源設備、生物醫學器材和精密工具機。&lt;/li&gt;
&lt;li&gt;現在年輕人, 應該如何學習運用電腦與網站?
基本操作技能、網路安全意識、應用軟體的使用、網路搜索技巧、編程和數位化能力、社交媒體和網路溝通和持續學習與跟進。&lt;/li&gt;
&lt;li&gt;以目前 AI 的發展趨勢來看, 會對學校教育有哪些重大影響?
個性化學習和教學、教學輔助工具、遠程教育和線上學習、數據驅動的決策和技能培養和職業準備。
請利用網路搜尋上列問題的可能回應資料, 篩選認為有用的資料放入個人的課程網站中, 並回報到課程倉儲的&lt;a href="https://github.com/mdecycu/wcm2024/discussions/1"&gt;討論區&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="五專"></category><category term="Chatgpt"></category><category term="w5"></category></entry><entry><title>WCM 五專第四週課程內容</title><link href="./wcm-5j-w4.html" rel="alternate"></link><published>2024-03-11T00:00:00+08:00</published><updated>2024-06-19T12:02:19+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-11:./wcm-5j-w4.html</id><summary type="html">&lt;p&gt;以下為五專精密機械科網際內容管理課程第四週上課內容, 包括回顧計算機概論, 以及如何在網頁推送至 Github 倉儲之前檢查所編輯的網頁內容.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;以下為五專精密機械科網際內容管理課程第四週上課內容, 包括回顧計算機概論, 以及如何在網頁推送至 Github 倉儲之前檢查所編輯的網頁內容.&lt;/p&gt;


&lt;h1&gt;建立個人最短網址網站&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://chen-yi-jing.github.io/content/index.html"&gt;最短網址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;服務可以讓 Github 帳號的擁有者, 使用"帳號.github.io"作為倉儲名稱, Github 會自動將此網站設定 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;, 假如此倉儲內部帶有超文件, 則此倉儲對應的網址將會是 https://帳號.github.io &lt;/p&gt;
&lt;p&gt;說明[如何建立短網址的 Github Pages 網站]教學影片&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://mde.tw/wcm2024/downloads/main2.txt"&gt;main2.txt&lt;/a&gt; 與 &lt;a href="https://mde.tw/wcm2024/downloads/static.txt"&gt;static.txt&lt;/a&gt;, 其中包含 main2.py 與 static.py, 只要在 Shell 執行 python3 main2.py 就可以執行倉儲內的靜態網站檢視. 另一方面, 若要取消先前執行 python3 main2.py, 只需要在 Shell 頁面按下 ctrl + c, c 代表 cancle 也就是取消. 然後若要執行動態網站，可以在 Shell 執行 python3 main.py 或者使用 Replit 的 Run 按鍵. &lt;/p&gt;</content><category term="五專"></category><category term="計概"></category><category term="分組"></category><category term="w4"></category></entry><entry><title>WCM 五專第三週課程內容</title><link href="./wcm-5j-w3.html" rel="alternate"></link><published>2024-03-04T00:00:00+08:00</published><updated>2024-06-19T12:03:51+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-04:./wcm-5j-w3.html</id><summary type="html">&lt;p&gt;以下為五專精密機械科網際內容管理課程第三週上課內容, 包括回顧計算機概論, 利用 Github Classroom 進行分組作業派送(名稱為 wcmj), 並且說明如何利用 Github Codespaces 維護個人與分組網站.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;以下為五專精密機械科網際內容管理課程第三週上課內容, 包括回顧計算機概論, 利用 Github Classroom 進行分組作業派送(名稱為 wcmj), 並且說明如何利用 Github Codespaces 維護個人與分組網站.&lt;/p&gt;


&lt;h1&gt;配置可攜程式系統&lt;/h1&gt;
&lt;p&gt;下載可攜程式環境: &lt;a href="http://229.cycu.org/portable_2024.7z"&gt;portable_2024.7z&lt;/a&gt; (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB)到自己的隨身中.&lt;/p&gt;</content><category term="五專"></category><category term="計概"></category><category term="分組"></category><category term="w3"></category></entry><entry><title>WCM 五專第一週與第二週課程內容</title><link href="./Starting-5J-WCM-course.html" rel="alternate"></link><published>2024-02-19T00:00:00+08:00</published><updated>2024-06-19T11:54:12+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-19:./Starting-5J-WCM-course.html</id><summary type="html">&lt;p&gt;以下包含五專精密機械科網際內容管理課程第一週與第二週的上課內容, 課程目標首先是讓學員了解如何利用 cmsimde_site 建立網站. 接著則是讓學員了解如何利用 Replit 維護網站內容.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;以下包含五專精密機械科網際內容管理課程第一週與第二週的上課內容, 課程目標首先是讓學員了解如何利用 cmsimde_site 建立網站. 接著則是讓學員了解如何利用 Replit 維護網站內容.&lt;/p&gt;


&lt;h1&gt;五專 WCM 第一週與第二週課程內容&lt;/h1&gt;
&lt;p&gt;請學員申請 Github 帳號&lt;/p&gt;
&lt;p&gt;請學員申請 Replit 帳號 - 建立使用可以收信的 Email 帳號作為 account, 自選密碼後登入 Replit&lt;/p&gt;
&lt;p&gt;一旦在個人 Github 帳號下建立 wcm2024 倉儲後, 可以進入倉儲 Settings 中的 Pages, 將 Branch 分支的 main 分支設為網頁的 root (根目錄), 就可以將 wcm2024 轉為該倉儲的網站, 而其網站的連結將會是: https://帳號.github.io/wcm2024&lt;/p&gt;
&lt;p&gt;請學員準備一個 USB 3.0 以上的隨身碟 32GB 或 64GB 都可以, 用來存放可攜程式系統,個人數位私鑰以及其他設定檔案.&lt;/p&gt;
&lt;p&gt;一旦在 Github 建立 wcm2024, 而且已經登記 Replit 帳號, 就可以設法讓兩個帳號透過授權, 讓 Replit import wcm2024 倉儲, 啟動網頁編輯後進行改版, 並且轉為靜態網站內容之後, 將資料推回 Github, 就可以更新 Github Pages 上的 wcm2024 靜態網站內容.&lt;/p&gt;</content><category term="五專"></category><category term="Github"></category><category term="MS_online"></category><category term="w1"></category><category term="w2"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-03-25T08:36:36+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-18:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry></feed>